{"status":{},"contains_secrets":true,"product_version":"3.2.6","spec":{"description":"","resources":{"client_attrs":{"ObjectsDeployment":{"y":-226,"x":75},"None":{"Profile":{"Default":{"Action":{},"dsl_name":"Default"}},"Deployment":{"ObjectsDeployment":{"Action":{},"dsl_name":"ObjectsDeployment"},"PostgresDeployment":{"Action":{},"dsl_name":"PostgresDeployment"},"OscarDeployment":{"Action":{},"dsl_name":"OscarDeployment"}},"Substrate":{"ObjectsSubstrate":{"Action":{},"dsl_name":"ObjectsSubstrate"},"PostgresSubstrate":{"Action":{},"dsl_name":"PostgresSubstrate"},"OscarDeployment_oscardjango_Substrate":{"Action":{},"dsl_name":"OscarDeployment_oscardjango_Substrate"}},"Service":{"Oscar":{"Action":{},"dsl_name":"Oscar"},"Objects":{"Action":{},"dsl_name":"Objects"},"Postgres":{"Action":{},"dsl_name":"Postgres"}},"Package":{"AHV_CENTOS":{"Action":{},"dsl_name":"AHV_CENTOS"},"PostgresPackage":{"Action":{},"dsl_name":"PostgresPackage"},"ObjectsPackage":{"Action":{},"dsl_name":"ObjectsPackage"},"OscarDeployment_oscardjango_Package":{"Action":{},"dsl_name":"OscarDeployment_oscardjango_Package"}}},"PostgresDeployment":{"y":-100,"x":-288},"OscarDeployment":{"y":85,"x":205}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___create___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___start___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Postgres___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Postgres___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Postgres___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[],"name":"Postgres","port_list":[],"tier":"","variable_list":[],"description":"Postgres Database Service"},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___create___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___start___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Objects___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Objects___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[],"name":"Objects","port_list":[],"tier":"","variable_list":[],"description":"Nutanix Objects Service"},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___create___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___start___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Oscar"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Oscar___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"Oscar___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[{"kind":"app_service","name":"Postgres"},{"kind":"app_service","name":"Objects"}],"name":"Oscar","port_list":[],"tier":"","container_spec":{"env":[{"name":"DATABASE_USER","value":"postgres"},{"name":"DATABASE_PASSWORD","value":"@@{DB_PASSWORD}@@"},{"name":"DATABASE_HOST","value":"@@{Postgres.DB_SERVER_IP}@@"},{"name":"DATABASE_NAME","value":"@@{Postgres.DB_NAME}@@"},{"name":"ACCESS_KEY","value":"@@{CRED_OBJECTS.username}@@"},{"name":"SECRET_ACCESS_KEY","value":"@@{CRED_OBJECTS.secret}@@"},{"name":"STATIC_BUCKET","value":"@@{BUCKET_NAME}@@"},{"name":"S3_ENDPOINT_URL","value":"http:\/\/@@{OBJECTS_IP}@@\/"},{"name":"DUMMY_HOST","value":"@@{Postgres.address}@@"}],"ports":[{"containerPort":8000}],"resources":{"requests":{"cpu":"500m","memory":"128Mi"},"limits":{"cpu":"1000m","memory":"512Mi"}},"name":"oscar-django"},"variable_list":[],"description":""}],"substrate_definition_list":[{"description":"Postgres DB","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Era_GET_ClusterID"},{"kind":"app_task","name":"Era_GET_ProfileIDs"},{"kind":"app_task","name":"Era_GET_SLAID"},{"kind":"app_task","name":"Era_Provision_DB"},{"kind":"app_task","name":"Era_Monitor_Operation"},{"kind":"app_task","name":"Era_Get_DatabaseInfo"}],"name":"PostgresSubstrate___pre_create___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Era_GET_ClusterID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_GET_ProfileIDs"}},{"from_task_reference":{"kind":"app_task","name":"Era_GET_ProfileIDs"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_GET_SLAID"}},{"from_task_reference":{"kind":"app_task","name":"Era_GET_SLAID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Provision_DB"}},{"from_task_reference":{"kind":"app_task","name":"Era_Provision_DB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Monitor_Operation"}},{"from_task_reference":{"kind":"app_task","name":"Era_Monitor_Operation"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Get_DatabaseInfo"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_GET_ClusterID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Cluster ID\nurl = \"https:\/\/{}\/era\/v0.8\/clusters\".format(era_ip)\n\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"CLUSTER_ID={}\".format(json.loads(resp.content)[0]['id']))\nelse:\n  print(\"Get Cluster ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)","eval_variables":["CLUSTER_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_GET_ProfileIDs","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\nera_software_profile = '@@{ERA_SOFTWARE_PROFILE}@@'\nera_compute_profile = '@@{ERA_COMPUTE_PROFILE}@@'\nera_network_profile ='@@{ERA_NETWORK_PROFILE}@@'\nera_database_parameter = '@@{ERA_DATABASE_PARAMETER}@@'\ntimestamp = '@@{calm_time(\"%Y%m%d%H%M\")}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Software Profile ID\nurl = \"https:\/\/{}\/era\/v0.8\/profiles?type=Software&name={}\".format(era_ip,era_software_profile)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"SOFTWARE_PROF_ID={}\".format(json.loads(resp.content)['id']))\nelse:\n  print(\"Get Software Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n  \n# Get Software Profile Version ID\nurl = \"https:\/\/{}\/era\/v0.8\/profiles?type=Software&name={}\".format(era_ip,era_software_profile)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"SOFTWARE_PROF_VER_ID={}\".format(json.loads(resp.content)['latestVersionId']))\nelse:\n  print(\"Get Software Profile Version ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n\n# Get Compute Profile ID\nurl = \"https:\/\/{}\/era\/v0.8\/profiles?type=Compute&name={}\".format(era_ip,era_compute_profile)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"COMPUTE_PROF_ID={}\".format(json.loads(resp.content)['id']))\nelse:\n  print(\"Get Compute Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n\n# Get Network Profile ID\nurl = \"https:\/\/{}\/era\/v0.8\/profiles?type=Network&name={}\".format(era_ip,era_network_profile)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"NETWORK_PROF_ID={}\".format(json.loads(resp.content)['id']))\nelse:\n  print(\"Get Network Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n\n# Get DB Parameter ID\nurl = \"https:\/\/{}\/era\/v0.8\/profiles?type=Database_Parameter&name={}\".format(era_ip,era_database_parameter)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"DB_PARAM_ID={}\".format(json.loads(resp.content)['id']))\nelse:\n  print(\"Get DB Parameter ID request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n\n# Set the timestamp to be used throughout the rest of the blueprint\nprint(\"TIMESTAMP={}\".format(timestamp))","eval_variables":["COMPUTE_PROF_ID","DB_PARAM_ID","NETWORK_PROF_ID","SOFTWARE_PROF_ID","SOFTWARE_PROF_VER_ID","TIMESTAMP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_GET_SLAID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\nera_sla_name = '@@{ERA_SLA_NAME}@@'\ntimestamp = '@@{TIMESTAMP}@@'\ndb_name_prefix = '@@{DB_NAME_PREFIX}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Set the db_name here, so we don't have the calm_time macro expanding at two different times\nprint(\"DB_NAME={}_{}\".format(db_name_prefix,timestamp))\n\n# Get the list of SLAs\nurl = \"https:\/\/{}\/era\/v0.8\/slas\".format(era_ip)\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n\n# Find the desired SLA, and set the corresponding ID to the variable\nif resp.ok:\n  for sla in json.loads(resp.content):\n    if sla['name'] == era_sla_name:\n      print(\"SLA_ID={}\".format(sla['id']))\nelse:\n  print(\"Get SLA request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)","eval_variables":["DB_NAME","SLA_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Provision_DB","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\nera_sla_name = '@@{ERA_SLA_NAME}@@'\ntimestamp = '@@{TIMESTAMP}@@'\ndb_name_prefix = '@@{DB_NAME_PREFIX}@@'\ndb_name = '@@{DB_NAME}@@'\ncluster_id = '@@{CLUSTER_ID}@@'\nsoftware_prof_id = \"@@{SOFTWARE_PROF_ID}@@\"\nsoftware_prof_ver_id = \"@@{SOFTWARE_PROF_VER_ID}@@\"\ncompute_prof_id = \"@@{COMPUTE_PROF_ID}@@\"\nnetwork_prof_id = \"@@{NETWORK_PROF_ID}@@\"\ndb_param_id = \"@@{DB_PARAM_ID}@@\"\ndb_password = \"@@{DB_PASSWORD}@@\"\ndb_public_key = \"@@{CRED_SERVER_DB.public_key}@@\"\nsla_id = \"@@{SLA_ID}@@\"\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Set the URL and payload\nurl     = \"https:\/\/{}\/era\/v0.8\/databases\/provision\".format(era_ip)\npayload = {\n  \"databaseName\": db_name,\n  \"databaseType\": \"postgres_database\",\n  \"databaseDescription\": \"Postgres database provisioned by Calm Application @@{calm_application_name}@@\",\n  \"clusterId\": cluster_id,\n  \"softwareProfileId\": software_prof_id,\n  \"softwareProfileVersionId\": software_prof_ver_id,\n  \"computeProfileId\": compute_prof_id,\n  \"networkProfileId\": network_prof_id,\n  \"dbParameterProfileId\": db_param_id,\n  \"newDbServerTimeZone\": \"Europe\/Amsterdam\",\n  \"provisionInfo\": [\n    {\n      \"name\": \"application_type\",\n      \"value\": \"postgres_database\"\n    },\n    {\n      \"name\": \"nodes\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"listener_port\",\n      \"value\": \"5432\"\n    },\n    {\n      \"name\": \"proxy_read_port\",\n      \"value\": \"5001\"\n    },\n    {\n      \"name\": \"proxy_write_port\",\n      \"value\": \"5000\"\n    },\n    {\n      \"name\": \"database_size\",\n      \"value\": \"200\"\n    },\n    {\n      \"name\": \"working_dir\",\n      \"value\": \"\/tmp\"\n    },\n    {\n      \"name\": \"auto_tune_staging_drive\",\n      \"value\": True\n    },\n    {\n      \"name\": \"enable_synchronous_mode\",\n      \"value\": False\n    },\n    {\n      \"name\": \"db_password\",\n      \"value\": db_password\n    },\n    {\n      \"name\": \"dbserver_name\",\n      \"value\": \"PostgreSQL-@@{calm_time}@@\"\n    },\n    {\n      \"name\": \"dbserver_description\",\n      \"value\": \"Postgres database server provisioned by Calm Application @@{calm_application_name}@@\"\n    },\n    {\n      \"name\": \"ssh_public_key\",\n      \"value\": db_public_key\n    }\n  ],\n  \"timeMachineInfo\": {\n    \"name\": \"PostgreSQL-@@{calm_time}@@_TM\",\n    \"description\": \"PostgreSQL-@@{calm_time}@@ time machine\",\n    \"slaId\": sla_id,\n    \"schedule\": {\n      \"continuousSchedule\": {\n        \"enabled\": True,\n        \"logBackupInterval\": 30,\n        \"snapshotsPerDay\": 30\n      },\n      \"snapshotTimeOfDay\": {\n        \"hours\": 1,\n        \"minutes\": 0,\n        \"seconds\": 0\n      },\n      \"weeklySchedule\": {\n        \"enabled\": True,\n        \"dayOfWeek\": \"SUNDAY\"\n      },\n      \"monthlySchedule\": {\n        \"enabled\": True,\n        \"dayOfMonth\": 1\n      },\n      \"quartelySchedule\": {\n        \"enabled\": True,\n        \"startMonth\": \"JANUARY\",\n        \"dayOfMonth\": 1\n      },\n      \"yearlySchedule\": {\n        \"enabled\": False,\n        \"month\": \"DECEMBER\",\n        \"dayOfMonth\": 1\n      }\n    }\n  }\n}\n\n# Make the call and set the response operation ID to the variable\nresp = urlreq(url, verb='POST', auth='BASIC', user=era_user, passwd=era_pass, params=json.dumps(payload), headers=headers)\nif resp.ok:\n  print(\"CREATE_OPERATION_ID={}\".format(json.loads(resp.content)['operationId']))\nelse:\n  print(\"Post Database create request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)","eval_variables":["CREATE_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Monitor_Operation","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\ncreate_operation_id = '@@{CREATE_OPERATION_ID}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n\nurl = \"https:\/\/{}\/era\/v0.8\/operations\/{}\".format(era_ip,create_operation_id)\n\n# Monitor the operation\nfor x in range(20):\n  \n  print(\"Sleeping for 60 seconds.\")\n  sleep(60)\n  resp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n  print(\"Percentage Complete: {}\".format(json.loads(resp.content)['percentageComplete']))\n  \n  # If complete, break out of loop\n  if json.loads(resp.content)['percentageComplete'] == \"100\":\n    break\n\n# If the operation did not complete within 20 minutes, assume it's not successful and error out\nif json.loads(resp.content)['percentageComplete'] != \"100\":\n  print(\"Get Operation ID timed out\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)\n\n# Get the newly provision DB Entity Name and set it to a variable\nprint(\"DB_ENTITY_NAME={}\".format(json.loads(resp.content)['entityName']))","eval_variables":["DB_ENTITY_NAME"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Get_DatabaseInfo","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\ndb_entity_name = '@@{DB_ENTITY_NAME}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get DB Server IP and ID\nurl = \"https:\/\/{}\/era\/v0.9\/databases\/{}?value-type=name&detailed=true\".format(era_ip,db_entity_name)\n\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print(\"DB_SERVER_IP={}\".format(json.loads(resp.content)['databaseNodes'][0]['dbserver']['ipAddresses'][0]))\n  print(\"DB_ID={}\".format(json.loads(resp.content)['id']))\n  print(\"DB_SERVER_ID={}\".format(json.loads(resp.content)['databaseNodes'][0]['dbserverId']))\nelse:\n  print(\"Get DB infor request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)","eval_variables":["DB_SERVER_IP","DB_ID","DB_SERVER_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"PostgresSubstrate___pre_create___runbook","main_task_local_reference":{"kind":"app_task","name":"PostgresSubstrate___pre_create___dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Era_Cleanup_DB"},{"kind":"app_task","name":"Era_Monitor_Cleanup"},{"kind":"app_task","name":"Era_Deregister_DBServer"},{"kind":"app_task","name":"Era_Monitor_Dereg"}],"name":"PostgresSubstrate___post_delete___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Era_Cleanup_DB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Monitor_Cleanup"}},{"from_task_reference":{"kind":"app_task","name":"Era_Monitor_Cleanup"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Deregister_DBServer"}},{"from_task_reference":{"kind":"app_task","name":"Era_Deregister_DBServer"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Era_Monitor_Dereg"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Cleanup_DB","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\ndb_id = '@@{DB_ID}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Cleanup the DB and get Operation ID\nurl = \"https:\/\/{}\/era\/v0.8\/databases\/{}?storage-cleanup=true&tm-cleanup=true&delete-db=false\".format(era_ip,db_id)\nresp = urlreq(\n    url, verb=\"DELETE\", auth=\"BASIC\", user=era_user, passwd=era_pass, headers=headers\n)\nif resp.ok:\n    print(\"CLEANUP_OPERATION_ID={0}\".format(json.loads(resp.content)[\"operationId\"]))\nelse:\n    print(\"Cleanup DB Operation failed\", json.dumps(json.loads(resp.content), indent=4))\n    exit(1)\n","eval_variables":["CLEANUP_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Monitor_Cleanup","attrs":{"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\ncleanup_operation_id = '@@{CLEANUP_OPERATION_ID}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\nurl = \"https:\/\/{}\/era\/v0.8\/operations\/{}\".format(era_ip,cleanup_operation_id)\n\n# Monitor the operation\nfor x in range(20):\n\n    print(\"Sleeping for 30 seconds.\")\n    sleep(30)\n    resp = urlreq(\n        url, verb=\"GET\", auth=\"BASIC\", user=era_user, passwd=era_pass, headers=headers\n    )\n    print(\n        \"Percentage Complete: {}\".format(\n            json.loads(resp.content)[\"percentageComplete\"]\n        )\n    )\n\n    # If complete, break out of loop\n    if json.loads(resp.content)[\"percentageComplete\"] == \"100\":\n        break\n\n# If the operation did not complete within 10 minutes, assume it's not successful and error out\nif json.loads(resp.content)[\"percentageComplete\"] != \"100\":\n    print(\"Cleanup Operation timed out\", json.dumps(json.loads(resp.content), indent=4))\n    exit(1)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Deregister_DBServer","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\ndb_server_id = '@@{DB_SERVER_ID}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Cleanup the DB and get Operation ID\nurl = \"https:\/\/{}\/era\/v0.8\/dbservers\/{}?remove=false&soft-remove=false&delete=true&delete-vm-snapshots=true&delete-vgs=true\".format(era_ip,db_server_id)\nresp = urlreq(\n    url, verb=\"DELETE\", auth=\"BASIC\", user=era_user, passwd=era_pass, headers=headers\n)\nif resp.ok:\n    print(\"DEREGISTER_OPERATION_ID={}\".format(json.loads(resp.content)[\"operationId\"]))\nelse:\n    print(\n        \"Deregister DB Server Operation failed\",\n        json.dumps(json.loads(resp.content), indent=4),\n    )\n    exit(1)\n","eval_variables":["DEREGISTER_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Era_Monitor_Dereg","attrs":{"script":"# Set creds and headers\nera_user = '@@{CRED_ERA.username}@@'\nera_pass = '@@{CRED_ERA.secret}@@'\nera_ip = '@@{ERA_IP}@@'\nderegister_operation_id = '@@{DEREGISTER_OPERATION_ID}@@'\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n\nurl = \"https:\/\/{}\/era\/v0.8\/operations\/{}\".format(era_ip,deregister_operation_id)\n\n# Monitor the operation\nfor x in range(20):\n\n    print(\"Sleeping for 30 seconds.\")\n    sleep(30)\n    resp = urlreq(\n        url, verb=\"GET\", auth=\"BASIC\", user=era_user, passwd=era_pass, headers=headers\n    )\n    print(\n        \"Percentage Complete: {}\".format(\n            json.loads(resp.content)[\"percentageComplete\"]\n        )\n    )\n\n    # If complete, break out of loop\n    if json.loads(resp.content)[\"percentageComplete\"] == \"100\":\n        break\n\n# If the operation did not complete within 10 minutes, assume it's not successful and error out\nif json.loads(resp.content)[\"percentageComplete\"] != \"100\":\n    print(\n        \"Deregistration Operation timed out\",\n        json.dumps(json.loads(resp.content), indent=4),\n    )\n    exit(1)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"PostgresSubstrate___post_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"PostgresSubstrate___post_delete___dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"EXISTING_VM","name":"PostgresSubstrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{ip_address}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"CRED_SERVER_DB"}},"os_type":"Linux","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"@@{DB_SERVER_IP}@@"},"variable_list":[]},{"description":"Nutanix Objects Storage Bucket Substrate","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"ObjectsSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Objects_Create_Bucket"}],"name":"ObjectsSubstrate___pre_create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"ObjectsSubstrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Objects_Create_Bucket","attrs":{"script":"# Credential section\nimport boto3\naccess_key = '@@{CRED_OBJECTS.username}@@'\nsecret_key = '@@{CRED_OBJECTS.secret}@@'\nobjects_ip = \"@@{OBJECTS_IP}@@\"\n\n# Variables section\nobjects_region = 'us-east-1'\nbucket_name = '@@{BUCKET_NAME}@@'\n\n\n# === DO NOT CHANGE AFTER THIS ===\nmy_vars = {\n    's3': {\n        'Bucket': bucket_name\n    }\n}\n\n\n# Authentication\nsession = boto3.Session(\n    aws_access_key_id=access_key,\n    aws_secret_access_key=secret_key,\n    region_name=objects_region\n)\n\ns3 = session.client(\n    's3',\n    endpoint_url='http:\/\/{}\/'.format(objects_ip)\n)\n\ntry:\n    # Create bucket\n    response = s3.create_bucket(**my_vars['s3'])\n    print('Creating Objects bucket: {}'.format(\n        my_vars['s3']['Bucket']))\n\nexcept s3.exceptions.ClientError as error:\n    raise error\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"ObjectsSubstrate___pre_create___runbook","main_task_local_reference":{"kind":"app_task","name":"ObjectsSubstrate___pre_create___dag"},"variable_list":[]},"name":"pre_action_create"}],"type":"EXISTING_VM","name":"ObjectsSubstrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{ip_address}@@","delay_secs":"0","disable_readiness_probe":true,"login_credential_local_reference":{"kind":"app_credential","name":"CRED_OBJECTS"}},"os_type":"Linux","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"@@{OBJECTS_IP}@@"},"variable_list":[]},{"description":"","action_list":[],"type":"K8S_POD","name":"OscarDeployment_oscardjango_Substrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"","delay_secs":"60","disable_readiness_probe":true},"os_type":"Linux","create_spec":{"metadata":{"labels":{"tier":"frontend","calmappuuid":"@@{calm_application_uuid}@@","app":"django-@@{Postgres.TIMESTAMP}@@","component":"oscar"},"namespace":"default","name":"Oscar_Django"},"type":"PROVISION_K8S_POD","spec":{"dnsPolicy":"ClusterFirst"},"account_uuid":"054e6b17-1434-8055-1bb6-49a3120091b4"},"variable_list":[]}],"credential_definition_list":[{"username":"nutanix","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"4wz0u7SYvTd74Alq1k0XPYcu3VlM8+SbX00lPp3qCNHFtb9aF5gFJZ9S:utf-8"},"name":"CRED_OS"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"FbWVHK8S5bOUUz6\/lSBct\/de9TkcE1p6bpeg+ylzifdnMVWqDqrgEVM=:utf-8"},"name":"CRED_ERA"},{"username":"era","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"Jr3NZ\/RfWhCC+Uu2PARh7rln\/g\/+sM7tpK4yO8m1gWvmOJ4L1DAFXaXFc\/znWQyzUYvhUUC5l8r1dN7trrPQpFG85hl5hOExP\/UqxMkEmF3dfidSXNYmp16NWyzXEsA7Jz6ixV1UdxqItD6FlufA9afphjKKJ9AF8SsGO9NlcgJr1OECjDEDjLG5sMBTVHrxPwhOcExOMbz+5oX0ebxi9orn97JW7ahp5tht1O\/10ckK+2sQmp8r70rNGb50ki8t\/iCfp1o9ZWtCYpZzETIbtguOKDlcDiK8YGU7GCL7HoBp+S9QGCvjLRGU3wckAAcnk7bY3HMqX8sJBjJNMwL8AOnnBO5ByalFTixoUYC1fc00j8KIJ75Tu905fMJxghZUpKLRL92RNcwMIsUqzCK1VXnaJwP\/gIGLj8pXEFGsqlGhi0haNIRqSVPA6eoZKrG5aIOrWkOQgOeHK1XegLzpI2minCoYg+0kg91ENrV3iZzIYrLimekeK4vV69VnOcCapjnU0CdDSMwuvLk\/gRdvaIHfRLpBaa\/Md2XqzApJ53roN5EJQROIn3o8DhPOw0brfR0vn5fjZZcwsJVc+sUS1KQXQ\/DjU021Gy5Kmiek1oTa0JtYF6T+plpedJjWSll2jQS80BZp\/QgopqN4pwkVcRNxHQ0oypX7ynx4gMTtj6Km0QLjXd8hWNDVqq1hIWfK8IQnw0sCTrMYppeZRL8eKlWTR93TwZaRegkAlJY5pFhIBUmrsSs9fvGCGHNvB7Wu96qLS3Y35G\/+g\/3+YEx8wcB63\/G5O3SVTEi3PoVlwamnFLubHSAbTpzR6+Ds2dCefnSvuaLYPGUhuneyx7zALBNzSFld3Sv0aFLnUidY6ONLEZdLZgR+Q46QkF58nWvRB5bUC04phxFfI4SCNLVZeBumzWsmHs97yicjUK2z0qDX5fp11ElavP3tJaXYE0rsbR0GC\/vjnHpExjyI6x\/TRXsGUS\/90xDffKR4dNJK3zmXnEEXFeNtLFvickrLPGVtLqoW8ySzIbdEUuEQjUKKHU32ZYm6nRBJzBhAMjzuTLa67ShKypH2nReL09ral2hlDR2JXAnBnDai8kg3i6ZX02sNJYXT\/fZnk60ulc\/2kVrbLD\/p05ghBkoraPSSASgVwssNOqKCKmt37M31yePKKnf0tCqzTlqRa6w+yGQRV4xioyGPAhB\/sLwagws0fEd7aLtN6A8Xb8X1WHM3Bbf+NFl6yl1VBDYn4PS3gmcm5HT4C7LQvCSJLfsuGntyNaJtBqdPaDYh17OM3LJejy3Rc8Vb93alo3Rc9TfxGzKxLvTzwpe97kLsvZeuV\/uogf5ZLF4HAETEzU0Bp+xqM68iLrLvpNC5kf8SrBUxuFOXRn3k8HjT427ujyAnMd+E\/SmnegPCuYWjZRORYvCCFBGJy1mvQ1hX0ODVdYmSUvQoUkk1132e5pEy5W6zNxmtLJQDrUk85z+GqHG2DzLYMDy755Mry\/5PartUqcjNPVYWKdfxXMfmxHx0McaX51IUCCz8agAcyf+qRpc1AyJDJ2ewRQNgsynAtTXkBUcpcHow3nJO7Dbl9E6ifvFvk7hyjVDR67QmRTixkg3bgfoRkfj5xWm0DlCzsMcWMKjrh\/xip8d5J2aiUl2DvKSAdpOCVGId43pIss1CqqrP5CoUE27D8MdEOFKZPpkS6vn4wNbUrMlmmP9TL9HuaaPo\/zIGLGJc9nyAlHYjH+kOwe+HcExhil0LwOhLbGvPDyqVjvUbYxCtyn4oT5ImsVtHeWpVeEahmsLJWtaoml6oot5tS0\/tYMHzEJevvMPP5opGHXFgaNHt+QmKZl96MDJA2XpASxI0DPX5xOmF1tEVc\/x3bzGu65etBviMDhukjusRlJZVqRmP3LJS3HLxBD18sr0SCEq8W4LWmst9aPT3hjqlpmS1n9Ui8X6IHYPR26HEsU0AoQcqt7cUz9AMXUcH6K0izOlRkUNGPr3XYWczfhbPPrDJdkjRHjuNyP8xDL7t2ACvOKXFXTy\/K4UORnzIiDxytzqSaEKqSybfcTDg9lv5M7lWel8Cl\/yju001YKameqT2v3nxbM13ByvRSI3vl01fMv\/lTROd+wcVc51\/4SrUfRytspCrWubvSG4Ic22adrxf4tbmFNmD0tfVjPSEmSicHUjW5Quu71hPh6O7gimWOGB\/uMOzstSjb0qc7t+K1qTDJyRWai7C4olnTRmRl9ky8AIZFxiwVyj7asKPpTQojVv8qK3jQUkabwsuUfl1:utf-8"},"name":"CRED_SERVER_DB"},{"username":"JeHDNY1qyImG0O_i08JryqysU3uacMaJ","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"BmqHyJ7UKirsp+OIr3VLyLEIh+exJsvTugNnMIYCEqEFDlWmg\/pwDCRKViR6G2St1BWjVLqehC7uGNV4bwcD8g==:utf-8"},"name":"CRED_OBJECTS"}],"package_definition_list":[{"description":"","action_list":[],"type":"SUBSTRATE_IMAGE","service_local_reference_list":[],"name":"AHV_CENTOS","version":"","options":{"type":"","name":"AHV_CENTOS_82","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"https:\/\/cloud.centos.org\/centos\/8\/x86_64\/images\/CentOS-8-GenericCloud-8.2.2004-20200611.2.x86_64.qcow2","version":{"product_version":"8.2.2004-20200611.2","type":"","product_name":"AHV_CENTOS_82"},"architecture":"X86_64","type":""},"description":""},"variable_list":[]},{"description":"Postgres Database Package","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"Postgres"}],"name":"PostgresPackage","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Oscar_Migration"}],"name":"PostgresPackage___install___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Oscar_Migration","attrs":{"script":"kube_calm_sa_token = '@@{KUBE_CALM_SA_TOKEN}@@'\nkubemaster_ip = '@@{KUBEMASTER_IP}@@'\ndb_password = \"@@{DB_PASSWORD}@@\"\ndb_server_ip = \"@@{DB_SERVER_IP}@@\"\ndb_name = \"@@{DB_NAME}@@\"\nobjects_access_key = \"@@{CRED_OBJECTS.username}@@\"\nobjects_secret_key = \"@@{CRED_OBJECTS.secret}@@\"\nbucket_name = \"@@{BUCKET_NAME}@@\"\nobjects_ip = \"@@{OBJECTS_IP}@@\"\n\n# ========= DO NOT CHANGE AFTER HERE ==========\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(kube_calm_sa_token)}\n\nurl     = \"https:\/\/{}\/apis\/batch\/v1\/namespaces\/default\/jobs\".format(kubemaster_ip)\n\npayload = {\n  \"apiVersion\": \"batch\/v1\",\n  \"kind\": \"Job\",\n  \"metadata\": {\n    \"name\": \"oscar-django-migrations-@@{calm_application_uuid}@@\",\n    \"labels\": {\n      \"app\": \"django\",\n      \"component\": \"oscar\",\n      \"tier\": \"frontend\"\n    }\n  },\n  \"spec\": {\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"django\",\n          \"component\": \"oscar\",\n          \"tier\": \"frontend\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"name\": \"django\",\n            \"image\": \"ukdemo\/oscar_jet:latest\",\n            \"imagePullPolicy\": \"Always\",\n            \"command\": [\n              \"\/bin\/bash\",\n              \"migrate.sh\"\n            ],\n            \"env\": [\n              {\n                \"name\": \"DATABASE_USER\",\n                \"value\": \"postgres\"\n              },\n              {\n                \"name\": \"DATABASE_PASSWORD\",\n                \"value\": db_password\n              },\n              {\n                \"name\": \"DATABASE_HOST\",\n                \"value\": db_server_ip\n              },\n              {\n                \"name\": \"DATABASE_NAME\",\n                \"value\": db_name\n              },\n              {\n                \"name\": \"ACCESS_KEY\",\n                \"value\": objects_access_key\n              },\n              {\n                \"name\": \"SECRET_ACCESS_KEY\",\n                \"value\": objects_secret_key\n              },\n              {\n                \"name\": \"STATIC_BUCKET\",\n                \"value\": bucket_name\n              },\n              {\n                \"name\": \"S3_ENDPOINT_URL\",\n                \"value\": \"http:\/\/{}\/\".format(objects_ip)\n              }\n            ]\n          }\n        ],\n        \"restartPolicy\": \"Never\"\n      }\n    },\n    \"backoffLimit\": 5\n  }\n}\n\n\nresp = urlreq(url, verb='POST', params=json.dumps(payload), headers=headers)\n\nif resp.ok:\n  print(json.dumps(json.loads(resp.content), indent=4))\nelse:\n  print(\"Post K8S Job request failed\", json.dumps(json.loads(resp.content), indent=4))\n  exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"PostgresPackage___install___runbook","main_task_local_reference":{"kind":"app_task","name":"PostgresPackage___install___dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_PostgresPackage_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_PostgresPackage_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_PostgresPackage_action_uninstall"},"variable_list":[]}},"variable_list":[]},{"description":"Nutanix Objects Package","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"Objects"}],"name":"ObjectsPackage","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_ObjectsPackage_action_install","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_ObjectsPackage_action_install","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_ObjectsPackage_action_install"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Objects"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_ObjectsPackage_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_ObjectsPackage_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_ObjectsPackage_action_uninstall"},"variable_list":[]}},"variable_list":[]},{"image_spec":{"image":"ukdemo\/oscar_jet:latest","imagePullPolicy":"Always"},"description":"","action_list":[],"type":"K8S_IMAGE","service_local_reference_list":[{"kind":"app_service","name":"Oscar"}],"name":"OscarDeployment_oscardjango_Package","version":"","variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"PostgresDeployment","min_replicas":"1","default_replicas":"","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"PostgresPackage"}],"substrate_local_reference":{"kind":"app_substrate","name":"PostgresSubstrate"},"options":{"type":""},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"ObjectsDeployment","min_replicas":"1","default_replicas":"","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"ObjectsPackage"}],"substrate_local_reference":{"kind":"app_substrate","name":"ObjectsSubstrate"},"options":{"type":""},"variable_list":[],"description":"Nutanix Objects Deployment"},{"type":"K8S_DEPLOYMENT","action_list":[],"name":"OscarDeployment","min_replicas":"2","default_replicas":"2","depends_on_list":[],"published_service_local_reference_list":[{"kind":"app_published_service","name":"OscarDeploymentPublished_Service"}],"max_replicas":"100","package_local_reference_list":[{"kind":"app_package","name":"OscarDeployment_oscardjango_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"OscarDeployment_oscardjango_Substrate"},"options":{"type":"PROVISION_K8S_DEPLOYMENT","spec":{"replicas":2,"selector":{"matchLabels":{"app":"django-@@{Postgres.TIMESTAMP}@@"}}},"metadata":{"labels":{"tier":"frontend","calmappuuid":"@@{calm_application_uuid}@@","app":"django-@@{Postgres.TIMESTAMP}@@","component":"oscar"},"namespace":"default","name":"oscar-django-deployment-@@{calm_random_hash}@@"}},"variable_list":[],"description":""}],"environment_reference_list":[],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Task1"}],"name":"4321117a_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"OscarDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Task1","attrs":{"scaling_count":"1","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[]}],"description":"","name":"f78a44be_runbook","main_task_local_reference":{"kind":"app_task","name":"4321117a_dag"},"variable_list":[]},"name":"Scale Out"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Task1"}],"name":"4f470978_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"OscarDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Task1","attrs":{"scaling_count":"1","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[]}],"description":"","name":"89632677_runbook","main_task_local_reference":{"kind":"app_task","name":"4f470978_dag"},"variable_list":[]},"name":"Scale In"}],"name":"Default","variable_list":[{"regex":{"should_validate":true,"value":"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"},"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"ERA_IP","value":"192.168.60.84","label":"Era virtual appliance IP address","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"OBJECTS_IP","value":"192.168.100.20","label":"Nutanix Objects IP address","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"ERA_SOFTWARE_PROFILE","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{ERA_IP}@@\/era\/v0.8\/profiles?type=Software&engine=postgres_database","response_paths":{"ERA_SOFTWARE_PROFILE":"$[*].name"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"CRED_ERA"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"ERA_COMPUTE_PROFILE","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{ERA_IP}@@\/era\/v0.8\/profiles?type=Compute","response_paths":{"ERA_COMPUTE_PROFILE":"$[*].name"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"CRED_ERA"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"ERA_NETWORK_PROFILE","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{ERA_IP}@@\/era\/v0.8\/profiles?type=Network&engine=postgres_database","response_paths":{"ERA_NETWORK_PROFILE":"$[*].name"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"CRED_ERA"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"ERA_DATABASE_PARAMETER","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{ERA_IP}@@\/era\/v0.8\/profiles?type=Database_Parameter&engine=postgres_database","response_paths":{"ERA_DATABASE_PARAMETER":"$[*].name"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"CRED_ERA"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"ERA_SLA_NAME","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{ERA_IP}@@\/era\/v0.8\/slas","response_paths":{"ERA_SLA_NAME":"$[*].name"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"CRED_ERA"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"DB_NAME_PREFIX","value":"oscar_django","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"DB_PASSWORD","value":"6yrEXYYeD+m2utJ1btcYPtKFRcbgJ9PARFVhaWy5sA6xt8+IxF\/RplFV:utf-8","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"BUCKET_NAME","value":"@@{calm_application_name}@@","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"KUBEMASTER_IP","value":"192.168.50.151","label":"Kubernetes API address","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"KUBE_CALM_SA_TOKEN","value":"q1VYrIJtajqLJ+nDMmeKBEOvznW0KzeH9tgemiUBcsPgIPQ9kKnbOi5Z1l4\/CG1PDLLPpD+QiJijS0sC26\/GM1\/+wKDYHPQWuJJ0LIv48raEkuCTagfPbS9QC5eHaDRm9DQa9\/VLL3YnzqMnVInwBGv0I2gaPe+cj6SaXXPdEf1WOlty7xdCXPz0AVLjbk79EVYnaV7nFY6rukhslJlG51YIqT0f9UCCa9X4YV7R8plYVz35ZxEu17HtCEu2irjkW6Llk0MO0dLNkfzaO5vX94mRD5X5s7rRXza7d87AvQ1O3+cNqRFwWCyD4zIGnrD0IvLfe1hFGilKecLsS+TTIJ6Pd2UOIdNeuNkyjwI4zTmUBskemqGnFGl48QRsWbzcAr4cyJZLKVKf4nNcLSUxji38AxiDTHVaTiCKv635fh\/M0JgoUdOgOJXgjwHOnEO\/\/4Hw7\/v5TMYXLb6z\/iMNsfKppa\/c\/t9mCB56AiC59m8KXSp2RL6vJVHg5fgZbDWCgpbbjgQaRcNvjB6sjNv9clD4K23Bjkt9lHKD7iLg8Cc2lNQ0pNkagXuBAkPqmnFA4qv5Vrk4pGJsUJXH5+5mJdFCkR3FR7aVn4Ac36O3Pe41DrR9W59zPhcXuYROmeO6vTzsnsrQwwSVjtGdesXlWQ2cjSAGGZ1QrKBR5YU7O0rsfYmGvXOyToKeFpGHzySBuxTBLP06UoPREfFB9Gozy+6dFPCdJR3JKgIZLRSuzsJSgRb4fze4\/lDJ1XnX6lWuoTR7z9Yh1A79Uw3JwUFVuz0jpW7SEe4J6cd6FonuMTmbv\/n6kY8bhXZk\/n8SosxlqjsL96+aB6ge7WjeyNTlvtDb0lwAJ9OchQTGgobMGcqntdA4az1466F1nalbRpYhkCHwzpKyaEIvZZ+47wXeoOenu8r2WuqpwLQybyjrs4Fc1pTqSLbsA4odKc9MXTq+uVjrP0TIHcqcZNB+saZlapnI9Q+S11WMIOq2Lu0msGP94b1NTFzkvTGcZZ2hCy7\/E8CTIi0+fsLidyAWc5FwxpPI+gkPQlRuDRjrfp+xdXpmGsQ3CvQwfCVWrHBRzxVQWArbpmzZ6h96tmV8Qn6vfKaw8SNa4Y3inCQXEdF0IspCBJKqR4fasGeqzV4Jo620CHOGXQ5MFHaMxVOtiLoTwviFA0PC2dj\/PqlomNjyJalc5UUk5o2NAGEhj0VoIUmlHAWvcDRO4BG2+wnLbO+m9VCP8O8iwtHLNeI3AV4f\/tvHrLya\/1g=:utf-8","label":"K8s service account token","attrs":{"is_secret_modified":false,"secret_reference":{},"type":""},"editables":{"value":true},"is_hidden":false}]}],"published_service_definition_list":[{"singleton":true,"action_list":[],"type":"K8S_SERVICE","depends_on_list":[],"name":"OscarDeploymentPublished_Service","port_list":[],"tier":"","options":{"type":"PROVISION_K8S_SERVICE","spec":{"type":"NodePort","ports":[{"targetPort":8000,"port":80}],"selector":{"app":"django-@@{Postgres.TIMESTAMP}@@"}},"metadata":{"labels":{"tier":"frontend","calmappuuid":"@@{calm_application_uuid}@@","app":"django-@@{Postgres.TIMESTAMP}@@","component":"oscar"},"namespace":"default","name":"oscar-django-service-@@{calm_random_hash}@@"}},"variable_list":[],"description":""}],"default_credential_local_reference":{"kind":"app_credential","name":"CRED_OS"},"type":"USER"},"name":"CloudNativeOscar"},"api_version":"3.0","metadata":{"last_update_time":"1624998460753288","kind":"blueprint","spec_version":13,"creation_time":"1620664117946835","name":"CloudNativeOscar"}}